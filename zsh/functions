# -*- mode: sh; -*-

function reload_local_completion() {
    local f
    f=(~/.config/zsh/completion/_*(.,@))
    unfunction $f:t 2> /dev/null
    autoload -U $f:t
    for f in ~/.config/zsh/completion/*.zsh(.,@); do
        source $f
    done
}

function upload_zsh_config() {
    [[ -z "$1" ]] && echo "Usage: $0 remote_ssh_host [-p port]" && return 1

    pushd $HOME &>/dev/null
    tar cj .config/zsh | ssh -axo "ClearAllForwardings yes" "$*" \
        "cat | tar xj && \
         rm -f .zshenv && ln -s .config/zsh/profile .zshenv && \
         rm -f .zshrc  && ln -s .config/zsh/zshrc   .zshrc  && \
         echo \"zsh config updated for \$(whoami) on \$(hostname)\""
    popd &>/dev/null
}

function pacQ() {
    local tab align
    tab=()
    pacman -Q $@ | while read p v; do
        desc=$(pacman -Qi "$p" | grep '^Description' | cut -c 25-)
        tab=($tab "$p:$desc")
    done
    zformat -a align " " $tab
    print -lr -- $align
}

function sshmux() {
    ssh -t $1 'tmux -u attach || tmux -u new'
}

# Get all the children PIDs of the given PID, recursively.
function pgrepPP() {
    local pid=$1
    local cpids=($(pgrep -P $pid))
    local cpid
    echo $pid
    for cpid in $cpids; do
        pgrepPP $cpid
    done
}

# Set a process and all its children to IDLEPRIO, by PID
function idleprio() {
    local pid=$1
    pgrepPP $pid | xargs schedtool -D
}

# Upload a file to transfer.sh
function transfer() {
    # write to output to tmpfile because of progress bar
    local tmpfile=$( mktemp -t transferXXX )
    curl --progress-bar --upload-file "$1" https://transfer.sh/$(basename "$1") >> $tmpfile
    cat $tmpfile
    rm -f $tmpfile
    echo ""
}
alias transfer=transfer
