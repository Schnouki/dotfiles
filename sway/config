### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Preferred apps
# (pass to "swaymsg exec -- " to open it on the original workspace that the
# command was run on)
set $term foot
set $editor /home/schnouki/bin/eclient -n -c
set $menu fuzzel
set $fman thunar
set $emoji rofimoji --selector="wofi" --action type copy
set $lock /home/schnouki/.config/swayidle/lock.sh
set $wallpaper_config /home/schnouki/.config/swww/choose-folder

set $wobsock $XDG_RUNTIME_DIR/wob.sock

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

# You can get the names of your outputs by running: swaymsg -t get_outputs
include ~/.config/sway/config.outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
set $laptop_kb 1:1:AT_Translated_Set_2_keyboard
set $keychron_kb_k4 1452:591:Keychron_K4_Keychron_K4
set $keychron_kb_k2 1452:591:Keytron_Keychron_K2

input * {
    xkb_layout fr,us
    xkb_variant oss,qwerty-fr
    repeat_delay 450
    repeat_rate 45
}
input type:touchpad {
    dwt enabled
}
input $keychron_kb_k4 {
    xkb_layout us
    xkb_variant qwerty-fr
    xkb_numlock enabled
}
input $keychron_kb_k2 {
    xkb_layout us
    xkb_variant qwerty-fr
}
input $laptop_kb {
    xkb_layout fr
    xkb_variant oss
}


### Workspaces
workspace 1 output $out_ext $out_int
workspace 2 output $out_ext $out_int
workspace 3 output $out_ext $out_int
workspace 4 output $out_ext $out_int
workspace 5 output $out_ext $out_int

workspace 6 output $out_int
workspace 7 output $out_int
workspace 8 output $out_int
workspace 9 output $out_int
workspace 10 output $out_int

workspace_auto_back_and_forth yes


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Start an editor
    bindsym $mod+Shift+Return exec $editor

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Stick/unstick the focused floating window
    bindsym $mod+Shift+s sticky toggle

    # Toggle the border for the focused window
    bindsym $mod+Shift+b border toggle

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+space exec ulauncher-toggle

    # Wallpaper config
    bindsym $mod+Shift+d exec $wallpaper_config

    # Emoji typer
    bindsym $mod+period exec $emoji

    # Lock screen
    bindsym $mod+Ctrl+Escape exec $lock

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Same bindings for the laptop keyboard (with fr-oss layout)
    bindsym --input-device=$laptop_kb $mod+ampersand  workspace number 1
    bindsym --input-device=$laptop_kb $mod+eacute     workspace number 2
    bindsym --input-device=$laptop_kb $mod+quotedbl   workspace number 3
    bindsym --input-device=$laptop_kb $mod+apostrophe workspace number 4
    bindsym --input-device=$laptop_kb $mod+parenleft  workspace number 5
    bindsym --input-device=$laptop_kb $mod+minus      workspace number 6
    bindsym --input-device=$laptop_kb $mod+egrave     workspace number 7
    bindsym --input-device=$laptop_kb $mod+underscore workspace number 8
    bindsym --input-device=$laptop_kb $mod+ccedilla   workspace number 9
    bindsym --input-device=$laptop_kb $mod+agrave     workspace number 10

    bindsym --input-device=$laptop_kb $mod+Shift+ampersand  move container to workspace number 1
    bindsym --input-device=$laptop_kb $mod+Shift+eacute     move container to workspace number 2
    bindsym --input-device=$laptop_kb $mod+Shift+quotedbl   move container to workspace number 3
    bindsym --input-device=$laptop_kb $mod+Shift+apostrophe move container to workspace number 4
    bindsym --input-device=$laptop_kb $mod+Shift+parenleft  move container to workspace number 5
    bindsym --input-device=$laptop_kb $mod+Shift+minus      move container to workspace number 6
    bindsym --input-device=$laptop_kb $mod+Shift+egrave     move container to workspace number 7
    bindsym --input-device=$laptop_kb $mod+Shift+underscore move container to workspace number 8
    bindsym --input-device=$laptop_kb $mod+Shift+ccedilla   move container to workspace number 9
    bindsym --input-device=$laptop_kb $mod+Shift+agrave     move container to workspace number 10

    # Workaround for https://github.com/swaywm/sway/issues/6961 (from https://github.com/swaywm/sway/issues/4955)
    seat * keyboard_grouping none

    # Switch to next/previous workspace
    bindsym $mod+Mod1+Left workspace prev_on_output
    bindsym $mod+Mod1+Right workspace next_on_output

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b split horizontal
    bindsym $mod+v split vertical
    bindsym $mod+n split none

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle all

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Ctrl+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Move focus to the child last-focused child of the focused container
    bindsym $mod+Shift+a focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


#
# Media shortcuts:
#
    bindsym XF86AudioRaiseVolume exec pamixer --unmute --increase 5 && pamixer --get-volume > $wobsock
    bindsym XF86AudioLowerVolume exec pamixer --unmute --decrease 5 && pamixer --get-volume > $wobsock
    bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $wobsock ) || pamixer --get-volume > $wobsock

    bindsym XF86AudioStop exec /home/schnouki/bin/mpris2-control stop
    bindsym XF86AudioPlay exec /home/schnouki/bin/mpris2-control playpause
    bindsym XF86AudioPrev exec /home/schnouki/bin/mpris2-control prev
    bindsym XF86AudioNext exec /home/schnouki/bin/mpris2-control next

    bindsym $mod+Shift+i exec /home/schnouki/bin/mpris2-control info
    bindsym $mod+Shift+o exec /home/schnouki/bin/mpris2-control nextplayer
    bindsym $mod+Shift+F12 exec /home/schnouki/bin/mpris2-control volume_plus > $wobsock
    bindsym $mod+Shift+F11 exec /home/schnouki/bin/mpris2-control volume_minus > $wobsock

#
# Brightness control:
#
    bindsym XF86MonBrightnessUp exec light -A 5 && light -G | cut -d'.' -f1 > $wobsock
    bindsym XF86MonBrightnessDown exec light -U 5 && light -G | cut -d'.' -f1 > $wobsock

#
# Screenshot:
#
mode "screenshot" {
    set $grimshot /home/schnouki/.config/sway/grimshot
    bindsym a exec $grimshot active; mode "default"
    bindsym o exec $grimshot output; mode "default"
    bindsym p exec $grimshot area; mode "default"
    bindsym s exec $grimshot screen; mode "default"
    bindsym w exec $grimshot window; mode "default"
    bindsym b exec $fman /home/schnouki/Dropbox/Public/Screenshots; mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+p mode "screenshot"

#
# Theme:
#
font pango:Iosevka Aile 12
seat * xcursor_theme posy-black
#hide_edge_borders smart
#gaps outer 0px
#gaps inner 12px
smart_borders no_gaps
smart_gaps inverse_outer


# Zenburn colors
# See also: https://thomashunter.name/i3-configurator/
set $zb-fg-05 #989890
set $zb-fg    #dcdccc

set $zb-bg-1  #2b2b2b
set $zb-bg    #3f3f3f
set $zb-bg+1  #4f4f4f

set $zb-red-6 #6c3333
set $zb-red-4 #8c5353
set $zb-red+1 #dca3a3

set $zb-blue-5 #366060
set $zb-blue-2 #6ca0a3
set $zb-blue+2 #ace0e3

set $zb-yellow-6 #907f4f
set $zb-yellow-4 #b09f6f
set $zb-yellow   #f0dfaf

# class                 border      background  text
client.focused          $zb-blue-2  $zb-blue-5  $zb-blue+2
client.focused_inactive $zb-fg-05   $zb-bg      $zb-fg
client.unfocused        $zb-bg+1    $zb-bg-1    $zb-fg-05
client.urgent           $zb-red-4   $zb-red-6   $zb-red+1

#
# App rules:
#
for_window [shell="xwayland"] title_format "%title <small>[XWayland]</small>"
# for_window [app_id=".*"] title_format "%title <small>[%app_id]</small>"

for_window [app_id="galculator"] floating enable
for_window [app_id="pavucontrol"] floating enable

for_window [app_id="firefox" title="Incrustation vidéo"] {
    floating enable
    border normal
    inhibit_idle visible
}

for_window [app_id="ulauncher"] {
    floating enable
    border none
}

# Run basic stuff
include /etc/sway/config.d/*

# Systemd integration -- https://github.com/swaywm/sway/wiki/Systemd-integration
exec "systemctl --user import-environment {,WAYLAND_}DISPLAY SWAYSOCK; systemctl --user start sway-session.target"

# Emacs: refresh environment after each reload
exec_always "emacsclient -ue '(schnouki/refresh-env)'"

# Mako seems to sometimes have trouble after sway restarts. So just in case...
exec_always "systemctl --user restart mako"
